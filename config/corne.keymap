/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include "keymap_spanish.h"
#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

/ {
    combos {
        compatible = "zmk,combos";

        Adjust {
            bindings = <&mo 3>;
            key-positions = <36 37 38 39>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            // -----------------------------------------------------------------------------------------
            // |  `   |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  | BKSP |
            // | TAB  |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  ;  |  '   |
            // | SHFT |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  /  | SHFT |
            //                    | RALT| ENT | LWR |   | RSE | SPC  | CRTL|

            bindings = <
&kp GRAVE  &kp Q  &kp W  &kp E     &kp R    &kp T        &kp Y    &kp U      &kp I      &kp O    &kp P     &kp BSPC
&kp TAB    &kp A  &kp S  &kp D     &kp F    &kp G        &kp H    &kp J      &kp K      &kp L    &kp SEMI  &kp SQT
&kp LSHFT  &kp Z  &kp X  &kp C     &kp V    &kp B        &kp N    &kp M      &kp COMMA  &kp DOT  &kp FSLH  &kp RSHFT
                         &kp RALT  &kp RET  &mo 1        &mo 2    &kp SPACE  &kp LCTRL
>;
        };

        lower_layer {
            // -----------------------------------------------------------------------------------------
            // |  [   |  <  |  ¡  |  !  |  >  |  ]  |   |  =  |  7  |  8  |  9  |  *  | BKSP |
            // |  {   |  (  |  ¿  |  ?  |  )  |  }  |   |  0  |  4  |  5  |  6  |  +  |      |
            // | SHFT |     |     | ESC |     |     |   |  /  |  1  |  2  |  3  |  -  |      |
            //                    | RALT| ENT | LWR |   | RSE | SPC  | CRTL|

            bindings = <
&kp ES_LBRC   &kp ES_LABK   &kp ES_IEXL   &kp ES_EXLM   &kp ES_RABK   &kp ES_RBRC      &kp ES_EQL        &kp KP_NUMBER_7  &kp KP_NUMBER_8  &kp KP_NUMBER_9  &kp KP_ASTERISK &trans
&kp ES_LCBR   &kp ES_LPRN   &kp ES_IQUE   &kp ES_QUES   &kp ES_RPRN   &kp ES_RCBR      &kp KP_NUMBER_0   &kp KP_NUMBER_4  &kp KP_NUMBER_5  &kp KP_NUMBER_6  &kp KP_PLUS     &trans
&kp LSHFT     &trans        &kp ESC       &trans        &trans        &trans           &kp FSLH          &kp KP_NUMBER_1  &kp KP_NUMBER_2  &kp KP_NUMBER_3  &kp MINUS       &trans
                                          &trans        &trans        &mo 1            &mo 2             &trans           &trans
            >;
        };

        raise_layer {
            // -----------------------------------------------------------------------------------------
            // | ESC   | PRTSC |  WIN+M  | WIN+E | WIN+R   |   | |     | PGUP |BCKSPC |   ^   |  DEL |  HOME |       |
            // |       | UNDO  |   CUT   | COPY  | PASTE   |   | |     | PGDN |   <-  |   v   |  ->  |  END  |       |
            // |       |       |         |       |         |   | |     |      | PASTE | COPY  | CUT  |  UNDO |       |
            //                 |  RALT   |  ENT  |   LWR   |           | RSE  | SPC   | CRTL  |

            bindings = <
&kp ESCAPE  &kp PSCRN  &kp RG(M)  &kp RG(E)  &kp RG(R)  &trans         &kp PG_UP  &kp BACKSPACE  &kp UP    &kp DEL    &kp HOME  &trans
&trans      &kp LC(Z)  &kp LC(X)  &kp LC(C)  &kp LC(V)  &trans         &kp PG_DN  &kp LEFT       &kp DOWN  &kp RIGHT  &kp END   &trans
&trans      &trans     &trans     &trans     &trans     &trans         &trans     &kp LC(V)      &kp LC(C) &kp LC(X)  &kp LC(Z) &trans
                                       &kp LGUI   &kp RET    &mo 1          &mo 2      &kp SPACE  &kp RALT
            >;
        };

        Adjust {
            // -----------------------------------------------------------------------------------------
            // | CAPSUP | BT1  | BT2 | BT3 | BT4 | BT5 |   |    |      |     |     |     | BTCLR |
            // |  F1    |  F2  |  F3 | F4  |  F5 |  F6 |   | F7 |  F8  |  F9 | F10 | F11 |  F12  |
            // |        |      |     |     |     |     |   |    |      |     |     |     |       |
            //                       | RALT| ENT | LWR |   | RSE | SPC  | CRTL|
            bindings = <
&kp LC(LA(DEL)) &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4  &none   &none   &none   &none   &none   &bt BT_CLR
&kp F1          &kp F2        &kp F3        &kp F4        &kp F5        &kp F6        &kp F7  &kp F8  &kp F9  &kp F10 &kp F11 &kp F12
&trans          &trans        &trans        &trans        &trans        &trans        &trans  &trans  &trans  &trans  &trans  &trans
                        &kp LGUI   &kp RET    &mo 1          &mo 2      &kp SPACE  &kp RALT
            >;
        };
    };
};
